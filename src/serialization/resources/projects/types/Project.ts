/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { ScaleApi } from "@fern-api/scale";
import * as core from "../../../../core";

export const Project: core.serialization.ObjectSchema<serializers.Project.Raw, ScaleApi.Project> =
    core.serialization.object({
        type: core.serialization.string().optional(),
        name: core.serialization.string().optional(),
        paramHistory: core.serialization.property(
            "param_history",
            core.serialization
                .list(core.serialization.lazyObject(async () => (await import("../../..")).ProjectPramHistory))
                .optional()
        ),
        createdAt: core.serialization.property("created_at", core.serialization.string().optional()),
    });

export declare namespace Project {
    interface Raw {
        type?: string | null;
        name?: string | null;
        param_history?: serializers.ProjectPramHistory.Raw[] | null;
        created_at?: string | null;
    }
}
