/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { ScaleApi } from "@fern-api/scale";
import * as core from "../../../../core";

export const Geometries: core.serialization.ObjectSchema<serializers.Geometries.Raw, ScaleApi.Geometries> =
    core.serialization.object({
        box: core.serialization.lazyObject(async () => (await import("../../..")).Box).optional(),
        polygon: core.serialization.lazyObject(async () => (await import("../../..")).Polygon).optional(),
        line: core.serialization.lazyObject(async () => (await import("../../..")).Line).optional(),
        point: core.serialization.lazyObject(async () => (await import("../../..")).Point).optional(),
        cuboid: core.serialization.lazyObject(async () => (await import("../../..")).Cuboid).optional(),
        ellipse: core.serialization.lazyObject(async () => (await import("../../..")).Ellipse).optional(),
    });

export declare namespace Geometries {
    interface Raw {
        box?: serializers.Box.Raw | null;
        polygon?: serializers.Polygon.Raw | null;
        line?: serializers.Line.Raw | null;
        point?: serializers.Point.Raw | null;
        cuboid?: serializers.Cuboid.Raw | null;
        ellipse?: serializers.Ellipse.Raw | null;
    }
}
