/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { ScaleApi } from "@fern-api/scale";
import * as core from "../../../../core";

export const VideoPlaybackParams: core.serialization.ObjectSchema<
    serializers.VideoPlaybackParams.Raw,
    ScaleApi.VideoPlaybackParams
> = core.serialization.object({
    attachment: core.serialization.string().optional(),
    frameRate: core.serialization.property("frame_rate", core.serialization.number().optional()),
    withLabels: core.serialization.property("with_labels", core.serialization.boolean().optional()),
    eventsToAnnotate: core.serialization.property(
        "events_to_annotate",
        core.serialization.list(core.serialization.unknown()).optional()
    ),
    geometries: core.serialization
        .lazyObject(async () => (await import("../../..")).VideoPlaybackGeometries)
        .optional(),
    isTest: core.serialization.property("is_test", core.serialization.boolean().optional()),
    metadata: core.serialization.string().optional(),
});

export declare namespace VideoPlaybackParams {
    interface Raw {
        attachment?: string | null;
        frame_rate?: number | null;
        with_labels?: boolean | null;
        events_to_annotate?: unknown[] | null;
        geometries?: serializers.VideoPlaybackGeometries.Raw | null;
        is_test?: boolean | null;
        metadata?: string | null;
    }
}
