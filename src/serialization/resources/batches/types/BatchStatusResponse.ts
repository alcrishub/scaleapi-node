/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { Scale } from "@fern-api/scale";
import * as core from "../../../../core";

export const BatchStatusResponse: core.serialization.ObjectSchema<
    serializers.BatchStatusResponse.Raw,
    Scale.BatchStatusResponse
> = core.serialization.object({
    status: core.serialization.lazy(async () => (await import("../../..")).BatchStatus).optional(),
    pending: core.serialization.number().optional(),
    error: core.serialization.number().optional(),
    completed: core.serialization.number().optional(),
    canceled: core.serialization.number().optional(),
});

export declare namespace BatchStatusResponse {
    interface Raw {
        status?: serializers.BatchStatus.Raw | null;
        pending?: number | null;
        error?: number | null;
        completed?: number | null;
        canceled?: number | null;
    }
}
